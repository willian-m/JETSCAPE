diff --git a/src/FileIO.cpp b/src/FileIO.cpp
index 9ace33c..d66a56c 100644
--- a/src/FileIO.cpp
+++ b/src/FileIO.cpp
@@ -164,7 +164,7 @@ void readDensityFile(float *density, char name[255], parameters params)
   infile.close();
 }
 
-void readInParameters(struct parameters &params)
+void readInParameters(const char *filename, struct parameters &params)
 {
   char dummyChar[255];
   int dummyInt;
@@ -172,9 +172,7 @@ void readInParameters(struct parameters &params)
   float dummyFloat;
 
   FILE *fileIn;
-  std::stringstream paramsStream;
-  paramsStream << "freestream_input";
-  fileIn = fopen(paramsStream.str().c_str(),"r");
+  fileIn = fopen(filename,"r");
 
   if (fileIn == NULL)
   {
diff --git a/src/FreestreamMilne.cpp b/src/FreestreamMilne.cpp
index a891efb..9417635 100644
--- a/src/FreestreamMilne.cpp
+++ b/src/FreestreamMilne.cpp
@@ -34,6 +34,10 @@ class FREESTREAMMILNE {
 
     int run_freestream_milne();
 
+    struct parameters params;
+
+    parameters * configure(const char * = "freestream_input");
+
     // IS THIS VARIABLE NECESSARY
     int gridSize; //the total number of grid points in x, y, and eta : used for vector memory allocation
 
@@ -64,7 +68,8 @@ class FREESTREAMMILNE {
                             std::vector<double>&, //piyy
                             std::vector<double>&, //piyn
                             std::vector<double>&, //pinn
-                            std::vector<double>&); //Pi
+                            std::vector<double>&, //Pi
+                            double&);             //tau_hydro
 
     std::vector<double> final_energy_density;
     std::vector<double> final_pressure;
@@ -115,7 +120,9 @@ void FREESTREAMMILNE::output_to_vectors(std::vector<double> &energy_density_out,
                                         std::vector<double> &piyy_out,
                                         std::vector<double> &piyn_out,
                                         std::vector<double> &pinn_out,
-                                        std::vector<double> &Pi_out) {
+                                        std::vector<double> &Pi_out,
+                                        double &tau_hydro
+                                        ) {
   energy_density_out = final_energy_density;
   pressure_out = final_pressure;
   ut_out = final_ut;
@@ -133,17 +140,12 @@ void FREESTREAMMILNE::output_to_vectors(std::vector<double> &energy_density_out,
   piyn_out = final_piyn;
   pinn_out = final_pinn;
   Pi_out = final_Pi;
+  tau_hydro = params.DTAU+params.TAU0;
 }
 
-//where the magic happens
-int FREESTREAMMILNE::run_freestream_milne() {
-
-float hbarc = 0.197326938;
-
-if(PRINT_SCREEN) printf("Welcome to freestream-milne\n");
-
+parameters * FREESTREAMMILNE::configure(const char *filename) {
 //declare parameter struct
-struct parameters params;
+//struct parameters params;
 
 //set default parameters in case of missing freestream_input file
 params.OUTPUTFORMAT = 2;
@@ -172,7 +174,18 @@ params.VISCOUS_MATCHING = 1;
 params.E_DEP_FS = 0;
 
 //read in chosen parameters from freestream_input if such a file exists
-readInParameters(params);
+readInParameters(filename,params);
+
+return &params;
+
+}
+
+//where the magic happens
+int FREESTREAMMILNE::run_freestream_milne() {
+
+float hbarc = 0.197326938;
+
+if(PRINT_SCREEN) printf("Welcome to freestream-milne\n");
 
 //define some useful combinations
 params.DIM = params.DIM_X * params.DIM_Y * params.DIM_ETA;
